2022.2:
 * Version 5.0 (Rev. 28)
 * Revision change in one or more subcores

2022.1.2:
 * Version 5.0 (Rev. 27)
 * No changes

2022.1.1:
 * Version 5.0 (Rev. 27)
 * No changes

2022.1:
 * Version 5.0 (Rev. 27)
 * Revision change in one or more subcores

2021.2.2:
 * Version 5.0 (Rev. 26)
 * No changes

2021.2.1:
 * Version 5.0 (Rev. 26)
 * No changes

2021.2:
 * Version 5.0 (Rev. 26)
 * Revision change in one or more subcores

2021.1.1:
 * Version 5.0 (Rev. 25)
 * No changes

2021.1:
 * Version 5.0 (Rev. 25)
 * Revision change in one or more subcores

2020.3:
 * Version 5.0 (Rev. 24)
 * Revision change in one or more subcores

2020.2.2:
 * Version 5.0 (Rev. 23)
 * No changes

2020.2.1:
 * Version 5.0 (Rev. 23)
 * No changes

2020.2:
 * Version 5.0 (Rev. 23)
 * Revision change in one or more subcores

2020.1.1:
 * Version 5.0 (Rev. 22)
 * No changes

2020.1:
 * Version 5.0 (Rev. 22)
 * Revision change in one or more subcores

2019.2.2:
 * Version 5.0 (Rev. 21)
 * No changes

2019.2.1:
 * Version 5.0 (Rev. 21)
 * No changes

2019.2:
 * Version 5.0 (Rev. 21)
 * Revision change in one or more subcores

2019.1.3:
 * Version 5.0 (Rev. 20)
 * No changes

2019.1.2:
 * Version 5.0 (Rev. 20)
 * No changes

2019.1.1:
 * Version 5.0 (Rev. 20)
 * No changes

2019.1:
 * Version 5.0 (Rev. 20)
 * General: Added IP Waiver Mechanism. No Functional changes
 * Revision change in one or more subcores

2018.3.1:
 * Version 5.0 (Rev. 19)
 * No changes

2018.3:
 * Version 5.0 (Rev. 19)
 * General: Updated XDC files. No Functional changes
 * Revision change in one or more subcores

2018.2:
 * Version 5.0 (Rev. 18)
 * Revision change in one or more subcores

2018.1:
 * Version 5.0 (Rev. 17)
 * General: Support for ID width up to 32
 * Revision change in one or more subcores

2017.4:
 * Version 5.0 (Rev. 16)
 * Revision change in one or more subcores

2017.3:
 * Version 5.0 (Rev. 15)
 * General: Updated example design subcore version. No Functional changes
 * Revision change in one or more subcores

2017.2:
 * Version 5.0 (Rev. 14)
 * Revision change in one or more subcores

2017.1:
 * Version 5.0 (Rev. 13)
 * General: Updated example design subcore version. No Functional changes
 * Revision change in one or more subcores

2016.4:
 * Version 5.0 (Rev. 12)
 * Revision change in one or more subcores

2016.3:
 * Version 5.0 (Rev. 11)
 * Feature Enhancement: IP updated to support Spartan7 device family
 * Revision change in one or more subcores

2016.2:
 * Version 5.0 (Rev. 10)
 * Revision change in one or more subcores

2016.1:
 * Version 5.0 (Rev. 9)
 * Helper core version update (clk_wiz_v5_3).
 * RTL updated to fix 64bit register read
 * Revision change in one or more subcores

2015.4.2:
 * Version 5.0 (Rev. 8)
 * No changes

2015.4.1:
 * Version 5.0 (Rev. 8)
 * No changes

2015.4:
 * Version 5.0 (Rev. 8)
 * Revision change in one or more subcores

2015.3:
 * Version 5.0 (Rev. 7)
 * Added upto 64 bit address width support for AXI4 master interface
 * Core RTL updated to fix CDC warnings
 * Helper core version update (fifo_generator_v13_0)
 * IP revision number added to HDL module, library, and include file names, to support designs with both locked and upgraded IP instances
 * Revision change in one or more subcores

2015.2.1:
 * Version 5.0 (Rev. 6)
 * No changes

2015.2:
 * Version 5.0 (Rev. 6)
 * No changes

2015.1:
 * Version 5.0 (Rev. 6)
 * Fixed bd.tcl to reduce warnings in IPI design validation
 * Enabled out-of-context clock frequency setting by adding FREQ_HZ parameter to all clocks
 * Fixed post synthesis CDC warnings
 * Supported devices and production status are now determined automatically, to simplify support for future devices

2014.4.1:
 * Version 5.0 (Rev. 5)
 * No changes

2014.4:
 * Version 5.0 (Rev. 5)
 * Disabled HSIC related parameters from GUI
 * Encrypted source files are concatenated together to reduce the number of files and to reduce simulator compile time

2014.3:
 * Version 5.0 (Rev. 4)
 * IP is modified to use new sub-cores in place of proc_common, no functional changes
 * Updated HSIC_INTF interface as master as it is an IO interface, no functional changes

2014.2:
 * Version 5.0 (Rev. 3)
 * Updated XDC constraints for example design, no functional changes

2014.1:
 * Version 5.0 (Rev. 2)
 * Updated XDC constraints, no functional changes
 * Repackaged to improve internal automation, no functional changes
 * Internal device family name change, no functional changes
 * Netlists created by write_verilog and write_vhdl are IEEE P1735 encrypted, with keys for supported simulators so that netlist simulation can still be done
 * Enable third party synthesis tools to read encrypted netlists (but not source HDL)
 * Virtex UltraScale Pre-Production support

2013.4:
 * Version 5.0 (Rev. 1)
 * Kintex UltraScale Pre-Production support

2013.3:
 * Version 5.0
 * Added support for HSIC PHY
 * Added example design and demonstration testbench
 * Reduced warnings in synthesis and simulation
 * Enhanced support for IP Integrator
 * Added support for Cadence IES and Synopsys VCS simulators
 * Updated synchronizers for clock domain crossing to reduce Mean Time Between Failures (MTBF) from metastability

2013.2:
 * Version 4.0 (Rev. 1)
 * constraints processing order changed
 * Enabled support for future devices

2013.1:
 * Version 4.0
 * Lower case ports for Verilog
 * Added secure transaction support on AXI Master interface

2012.4:
 * Version 3.02.a
 * First Release in Vivado

(c) Copyright 2012 - 2022 Xilinx, Inc. All rights reserved.

This file contains confidential and proprietary information
of Xilinx, Inc. and is protected under U.S. and
international copyright and other intellectual property
laws.

DISCLAIMER
This disclaimer is not a license and does not grant any
rights to the materials distributed herewith. Except as
otherwise provided in a valid license issued to you by
Xilinx, and to the maximum extent permitted by applicable
law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
(2) Xilinx shall not be liable (whether in contract or tort,
including negligence, or under any other theory of
liability) for any loss or damage of any kind or nature
related to, arising under or in connection with these
materials, including for any direct, or any indirect,
special, incidental, or consequential loss or damage
(including loss of data, profits, goodwill, or any type of
loss or damage suffered as a result of any action brought
by a third party) even if such damage or loss was
reasonably foreseeable or Xilinx had been advised of the
possibility of the same.

CRITICAL APPLICATIONS
Xilinx products are not designed or intended to be fail-
safe, or for use in any application requiring fail-safe
performance, such as life-support or safety devices or
systems, Class III medical devices, nuclear facilities,
applications related to the deployment of airbags, or any
other applications that could lead to death, personal
injury, or severe property or environmental damage
(individually and collectively, "Critical
Applications"). Customer assumes the sole risk and
liability of any use of Xilinx products in Critical
Applications, subject only to applicable laws and
regulations governing limitations on product liability.

THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
PART OF THIS FILE AT ALL TIMES.
